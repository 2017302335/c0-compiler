@var int a
@array int[] find_array 100
@call main
@exit
@func init_array
@var int a
a = 0
init_array_L_0_while_begin :
#0 = a LT 100
@bz #0 init_array_L_1_while_over
find_array = a ARSET a
a = a ADD 1
@j init_array_L_0_while_begin
init_array_L_1_while_over :
@ret
@func find
@para int begin
@para int end
@para int num
@var int mid
#0 = begin EQ end
@bz #0 find_L_0_else_begin
#0 = find_array ARGET begin
#1 = #0 EQ num
@bz #1 find_L_2_else_begin
@printf string S_0
@printf int begin
@printf string S_1
@j find_L_3_else_over
find_L_2_else_begin :
@printf string S_2
find_L_3_else_over :
@ret
find_L_0_else_begin :
find_L_1_else_over :
#0 = begin ADD end
mid = #0 DIV 2
#0 = find_array ARGET mid
#1 = #0 LT num
@bz #1 find_L_4_else_begin
#0 = mid ADD 1
@push #0
@push end
@push num
@call find
@j find_L_5_else_over
find_L_4_else_begin :
#0 = find_array ARGET mid
#1 = #0 GT num
@bz #1 find_L_6_else_begin
@push begin
@push mid
@push num
@call find
@j find_L_7_else_over
find_L_6_else_begin :
#0 = find_array ARGET mid
#1 = #0 EQ num
@bz #1 find_L_8_else_begin
@printf string S_0
@printf int mid
@printf string S_1
@j find_L_9_else_over
find_L_8_else_begin :
@printf string S_3
find_L_9_else_over :
find_L_7_else_over :
find_L_5_else_over :
@ret
@func get_index
@para int size
@para int row
@para int col
#0 = row SUB 1
#1 = #0 MUL size
#0 = col SUB 1
#2 = #1 ADD #0
@ret #2
@func zigzag
@var int a
@var int i
@var char temp
@var int tempi
@array char[] matrix 100
@var int row
@var int col
@printf string S_4
@scanf int a
zigzag_L_0_while_begin :
#0 = a GE 10
@bz #0 zigzag_L_1_while_over
@printf string S_5
@scanf int a
@j zigzag_L_0_while_begin
zigzag_L_1_while_over :
@printf string S_6
i = 0
zigzag_L_2_while_begin :
#0 = a MUL a
#1 = i LT #0
@bz #1 zigzag_L_3_while_over
@scanf char temp
matrix = i ARSET temp
i = i ADD 1
#0 = i DIV a
#1 = #0 MUL a
#0 = #1 EQ i
@bz #0 zigzag_L_4_else_begin
@printf string S_1
@j zigzag_L_5_else_over
zigzag_L_4_else_begin :
zigzag_L_5_else_over :
@j zigzag_L_2_while_begin
zigzag_L_3_while_over :
@printf string S_7
row = 1
@push a
@push 1
@push 1
@call get_index
@get #0
#1 = matrix ARGET #0
@printf char #1
col = 1
zigzag_L_6_while_begin :
#0 = row MUL col
#1 = a MUL a
#2 = #0 NE #1
@bz #2 zigzag_L_7_while_over
#0 = col EQ a
@bz #0 zigzag_L_8_else_begin
row = row ADD 1
@j zigzag_L_9_else_over
zigzag_L_8_else_begin :
col = col ADD 1
zigzag_L_9_else_over :
@push a
@push row
@push col
@call get_index
@get #0
#1 = matrix ARGET #0
@printf char #1
i = 0
tempi = col SUB row
zigzag_L_10_while_begin :
#0 = i LT tempi
@bz #0 zigzag_L_11_while_over
i = i ADD 1
col = col SUB 1
row = row ADD 1
@push a
@push row
@push col
@call get_index
@get #0
#1 = matrix ARGET #0
@printf char #1
@j zigzag_L_10_while_begin
zigzag_L_11_while_over :
#0 = row EQ a
@bz #0 zigzag_L_12_else_begin
col = col ADD 1
@j zigzag_L_13_else_over
zigzag_L_12_else_begin :
row = row ADD 1
zigzag_L_13_else_over :
@push a
@push row
@push col
@call get_index
@get #0
#1 = matrix ARGET #0
@printf char #1
i = 0
#0 = 0 SUB col
tempi = #0 ADD row
zigzag_L_14_while_begin :
#0 = i LT tempi
@bz #0 zigzag_L_15_while_over
i = i ADD 1
row = row SUB 1
col = col ADD 1
@push a
@push row
@push col
@call get_index
@get #0
#1 = matrix ARGET #0
@printf char #1
@j zigzag_L_14_while_begin
zigzag_L_15_while_over :
@j zigzag_L_6_while_begin
zigzag_L_7_while_over :
@ret
@func fluctuations
@var int n
@var int a
@var int b
@var int ra
@var int rb
@var int sub
@var int max_sub
@var int i
@printf string S_8
@scanf int n
fluctuations_L_0_while_begin :
#0 = n LE 1
@bz #0 fluctuations_L_1_while_over
@printf string S_9
@printf string S_8
@scanf int n
@j fluctuations_L_0_while_begin
fluctuations_L_1_while_over :
a = 0
b = 0
max_sub = -1
i = 0
fluctuations_L_2_while_begin :
#0 = 0 SUB i
#1 = 0 SUB #0
#0 = 0 SUB #1
#1 = 0 SUB #0
#0 = #1 LT n
@bz #0 fluctuations_L_3_while_over
@scanf int a
sub = a SUB b
@printf string S_10
@printf int sub
@printf string S_1
#1 = sub LE 0
@bz #1 fluctuations_L_4_else_begin
sub = 0 SUB sub
@j fluctuations_L_5_else_over
fluctuations_L_4_else_begin :
fluctuations_L_5_else_over :
#0 = sub GT max_sub
@bz #0 fluctuations_L_6_else_begin
ra = a
rb = b
max_sub = sub
@j fluctuations_L_7_else_over
fluctuations_L_6_else_begin :
fluctuations_L_7_else_over :
@printf string S_11
@printf int max_sub
@printf string S_1
b = a
i = i ADD 1
@j fluctuations_L_2_while_begin
fluctuations_L_3_while_over :
@printf string S_12
@printf int max_sub
@printf string S_13
@printf int ra
@printf string S_14
@printf int rb
@printf string S_1
@ret
@func fibonacci
@var int a
@var int b
@var int sum
@var int n
@var int i
a = 1
@printf string S_15
b = 1
@scanf int n
#0 = n LE 0
@bz #0 fibonacci_L_0_else_begin
@printf string S_16
@ret
fibonacci_L_0_else_begin :
fibonacci_L_1_else_over :
@printf int a
@printf string S_17
#0 = n LE 1
@bz #0 fibonacci_L_2_else_begin
@ret
fibonacci_L_2_else_begin :
fibonacci_L_3_else_over :
@printf int b
@printf string S_17
#0 = n LE 2
@bz #0 fibonacci_L_4_else_begin
@ret
fibonacci_L_4_else_begin :
fibonacci_L_5_else_over :
i = 3
fibonacci_L_6_while_begin :
#0 = i LE n
@bz #0 fibonacci_L_7_while_over
sum = a ADD b
b = a
@printf int sum
@printf string S_17
#0 = n DIV 10
#1 = #0 MUL 10
#0 = i ADD 1
#2 = #1 EQ #0
a = sum
@bz #2 fibonacci_L_8_else_begin
@printf string S_1
@j fibonacci_L_9_else_over
fibonacci_L_8_else_begin :
fibonacci_L_9_else_over :
i = i ADD 1
@j fibonacci_L_6_while_begin
fibonacci_L_7_while_over :
@ret
@func sort
@array int[] a 100
@var int size
@var int i
@var int j
@var int temp
@printf string S_18
@scanf int size
sort_L_0_while_begin :
#0 = size GE 100
@bz #0 sort_L_1_while_over
@printf string S_19
@scanf int size
@j sort_L_0_while_begin
sort_L_1_while_over :
@printf string S_20
@printf int size
@printf string S_21
i = 0
sort_L_2_while_begin :
#0 = i LT size
@bz #0 sort_L_3_while_over
@scanf int temp
a = i ARSET temp
@printf string S_22
#0 = a ARGET i
@printf int #0
@printf string S_1
i = i ADD 1
@j sort_L_2_while_begin
sort_L_3_while_over :
i = 0
sort_L_4_while_begin :
#0 = size SUB 1
#1 = i LT #0
@bz #1 sort_L_5_while_over
j = 0
sort_L_6_while_begin :
#0 = size SUB 1
#1 = #0 SUB i
#0 = j LT #1
@bz #0 sort_L_7_while_over
#1 = a ARGET j
#0 = j ADD 1
#2 = a ARGET #0
#3 = #1 GT #2
@bz #3 sort_L_8_else_begin
@printf string S_23
@printf int #1
@printf string S_24
@printf int #2
@printf string S_1
a = j ARSET #2
a = #0 ARSET #1
temp = #3
@j sort_L_9_else_over
sort_L_8_else_begin :
sort_L_9_else_over :
j = j ADD 1
@j sort_L_6_while_begin
sort_L_7_while_over :
i = i ADD 1
@j sort_L_4_while_begin
sort_L_5_while_over :
@printf string S_25
#0 = a ARGET 2
@printf int #0
@printf string S_1
@printf string S_26
i = 0
sort_L_10_while_begin :
#0 = i LT size
@bz #0 sort_L_11_while_over
i = i ADD 1
@printf string S_27
#0 = i SUB 1
@printf int #0
@printf string S_28
#1 = a ARGET #0
@printf int #1
@printf string S_17
#0 = i ADD 1
#1 = #0 DIV 10
#2 = #1 MUL 10
#1 = #2 EQ #0
@bz #1 sort_L_12_else_begin
@printf string S_1
@j sort_L_13_else_over
sort_L_12_else_begin :
sort_L_13_else_over :
@j sort_L_10_while_begin
sort_L_11_while_over :
@ret 48
@func select
@var int i
@var int num
select_L_0_while_begin :
@printf string S_1
@printf string S_29
@printf string S_30
@printf string S_31
@printf string S_32
@printf string S_33
@printf string S_34
@printf string S_35
@printf string S_29
@printf string S_36
@scanf int i
#0 = i DIV 1
#1 = #0 MUL 1
@be #1 0 select_L_3_case
@be #1 1 select_L_4_case
@be #1 2 select_L_5_case
@be #1 3 select_L_6_case
@be #1 4 select_L_7_case
@be #1 5 select_L_8_case
@j select_L_9_default
select_L_3_case :
@j select_L_2_switch_over
select_L_4_case :
@call sort
@j select_L_2_switch_over
select_L_5_case :
@call fibonacci
@j select_L_2_switch_over
select_L_6_case :
@call fluctuations
@j select_L_2_switch_over
select_L_7_case :
@call zigzag
@j select_L_2_switch_over
select_L_8_case :
@printf string S_37
@scanf int num
@push 0
@push 99
@push num
@call find
@j select_L_2_switch_over
select_L_9_default :
@printf string S_9
@j select_L_2_switch_over
select_L_2_switch_over :
#0 = i EQ 0
@bz #0 select_L_10_else_begin
@printf string S_38
@ret
select_L_10_else_begin :
select_L_11_else_over :
@j select_L_0_while_begin
select_L_1_while_over :
@ret
@func main
@call init_array
@call select
@ret
