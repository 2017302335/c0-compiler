@var int a
@array int[] find_array 100
@call main
@exit
@func init_array
@var int a
a = 0
init_array_L_0_while_begin :
#0 = a
#1 = #0
#1 = #1 LT 100
@bz #1 init_array_L_1_while_over
#2 = a
#3 = #2
#4 = a
#5 = #4
find_array = #3 ARSET #5
#2 = a
#3 = #2
#3 = #3 ADD 1
a = #3
@j init_array_L_0_while_begin
init_array_L_1_while_over :
@ret
@func find
@para int begin
@para int end
@para int num
@var int mid
#0 = begin
#1 = #0
#2 = end
#3 = #2
#1 = #1 EQ #3
@bz #1 find_L_0_else_begin
#4 = begin
#5 = #4
#6 = find_array ARGET #5
#7 = #6
#8 = #7
#9 = num
#10 = #9
#8 = #8 EQ #10
@bz #8 find_L_2_else_begin
@printf string S_0
#11 = begin
#12 = #11
@printf int #12
@printf string S_1
@j find_L_3_else_over
find_L_2_else_begin :
@printf string S_2
find_L_3_else_over :
@ret
@j find_L_1_else_over
find_L_0_else_begin :
find_L_1_else_over :
#0 = begin
#1 = #0
#2 = end
#1 = #1 ADD #2
#3 = #1
#3 = #3 DIV 2
#4 = #3
mid = #4
#0 = mid
#1 = #0
#2 = find_array ARGET #1
#3 = #2
#4 = #3
#5 = num
#6 = #5
#4 = #4 LT #6
@bz #4 find_L_4_else_begin
#7 = mid
#8 = #7
#8 = #8 ADD 1
@push #8
#9 = end
#10 = #9
@push #10
#11 = num
#12 = #11
@push #12
@call find
@j find_L_5_else_over
find_L_4_else_begin :
#7 = mid
#8 = #7
#9 = find_array ARGET #8
#10 = #9
#11 = #10
#12 = num
#13 = #12
#11 = #11 GT #13
@bz #11 find_L_6_else_begin
#14 = begin
#15 = #14
@push #15
#16 = mid
#17 = #16
@push #17
#18 = num
#19 = #18
@push #19
@call find
@j find_L_7_else_over
find_L_6_else_begin :
#14 = mid
#15 = #14
#16 = find_array ARGET #15
#17 = #16
#18 = #17
#19 = num
#20 = #19
#18 = #18 EQ #20
@bz #18 find_L_8_else_begin
@printf string S_0
#21 = mid
#22 = #21
@printf int #22
@printf string S_1
@j find_L_9_else_over
find_L_8_else_begin :
@printf string S_3
find_L_9_else_over :
find_L_7_else_over :
find_L_5_else_over :
@ret
@func get_index
@para int size
@para int row
@para int col
#0 = row
#1 = #0
#1 = #1 SUB 1
#2 = #1
#2 = #2 MUL size
#3 = #2
#4 = col
#5 = #4
#5 = #5 SUB 1
#6 = #5
#3 = #3 ADD #6
@ret #3
@ret 0
@func zigzag
@var int a
@var int i
@var char temp
@var int tempi
@array char[] matrix 100
@var int row
@var int col
@printf string S_4
@scanf int a
zigzag_L_0_while_begin :
#0 = a
#1 = #0
#1 = #1 GE 10
@bz #1 zigzag_L_1_while_over
@printf string S_5
@scanf int a
@j zigzag_L_0_while_begin
zigzag_L_1_while_over :
i = 0
@printf string S_6
zigzag_L_2_while_begin :
#0 = i
#1 = #0
#2 = a
#2 = #2 MUL a
#3 = #2
#1 = #1 LT #3
@bz #1 zigzag_L_3_while_over
@scanf char temp
#4 = i
#5 = #4
#6 = temp
#7 = #6
matrix = #5 ARSET #7
#4 = i
#5 = #4
#5 = #5 ADD 1
i = #5
#4 = i
#5 = #4
#6 = #5
#6 = #6 DIV a
#6 = #6 MUL a
#7 = #6
#8 = i
#9 = #8
#7 = #7 EQ #9
@bz #7 zigzag_L_4_else_begin
@printf string S_1
@j zigzag_L_5_else_over
zigzag_L_4_else_begin :
zigzag_L_5_else_over :
@j zigzag_L_2_while_begin
zigzag_L_3_while_over :
@printf string S_7
row = 1
col = 1
#0 = a
#1 = #0
@push #1
#2 = row
#3 = #2
@push #3
#4 = col
#5 = #4
@push #5
@call get_index
@get #6
#7 = #6
#8 = #7
#9 = matrix ARGET #8
#10 = #9
#11 = #10
@printf char #11
zigzag_L_6_while_begin :
#0 = row
#0 = #0 MUL col
#1 = #0
#2 = a
#2 = #2 MUL a
#3 = #2
#1 = #1 NE #3
@bz #1 zigzag_L_7_while_over
#4 = col
#5 = #4
#6 = a
#7 = #6
#5 = #5 EQ #7
@bz #5 zigzag_L_8_else_begin
#8 = row
#9 = #8
#9 = #9 ADD 1
row = #9
@j zigzag_L_9_else_over
zigzag_L_8_else_begin :
#8 = col
#9 = #8
#9 = #9 ADD 1
col = #9
zigzag_L_9_else_over :
i = 0
#4 = a
#5 = #4
@push #5
#6 = row
#7 = #6
@push #7
#8 = col
#9 = #8
@push #9
@call get_index
@get #10
#11 = #10
#12 = #11
#13 = matrix ARGET #12
#14 = #13
#15 = #14
@printf char #15
#4 = col
#5 = #4
#6 = row
#5 = #5 SUB #6
tempi = #5
zigzag_L_10_while_begin :
#4 = i
#5 = #4
#6 = tempi
#7 = #6
#5 = #5 LT #7
@bz #5 zigzag_L_11_while_over
#8 = i
#9 = #8
#9 = #9 ADD 1
i = #9
#8 = col
#9 = #8
#9 = #9 SUB 1
col = #9
#8 = row
#9 = #8
#9 = #9 ADD 1
row = #9
#8 = a
#9 = #8
@push #9
#10 = row
#11 = #10
@push #11
#12 = col
#13 = #12
@push #13
@call get_index
@get #14
#15 = #14
#16 = #15
#17 = matrix ARGET #16
#18 = #17
#19 = #18
@printf char #19
@j zigzag_L_10_while_begin
zigzag_L_11_while_over :
#4 = row
#5 = #4
#6 = a
#7 = #6
#5 = #5 EQ #7
@bz #5 zigzag_L_12_else_begin
#8 = col
#9 = #8
#9 = #9 ADD 1
col = #9
@j zigzag_L_13_else_over
zigzag_L_12_else_begin :
#8 = row
#9 = #8
#9 = #9 ADD 1
row = #9
zigzag_L_13_else_over :
i = 0
#4 = a
#5 = #4
@push #5
#6 = row
#7 = #6
@push #7
#8 = col
#9 = #8
@push #9
@call get_index
@get #10
#11 = #10
#12 = #11
#13 = matrix ARGET #12
#14 = #13
#15 = #14
@printf char #15
#4 = col
#5 = 0 SUB #4
#6 = row
#5 = #5 ADD #6
tempi = #5
zigzag_L_14_while_begin :
#4 = i
#5 = #4
#6 = tempi
#7 = #6
#5 = #5 LT #7
@bz #5 zigzag_L_15_while_over
#8 = i
#9 = #8
#9 = #9 ADD 1
i = #9
#8 = row
#9 = #8
#9 = #9 SUB 1
row = #9
#8 = col
#9 = #8
#9 = #9 ADD 1
col = #9
#8 = a
#9 = #8
@push #9
#10 = row
#11 = #10
@push #11
#12 = col
#13 = #12
@push #13
@call get_index
@get #14
#15 = #14
#16 = #15
#17 = matrix ARGET #16
#18 = #17
#19 = #18
@printf char #19
@j zigzag_L_14_while_begin
zigzag_L_15_while_over :
@j zigzag_L_6_while_begin
zigzag_L_7_while_over :
@ret
@func fluctuations
@var int n
@var int a
@var int b
@var int ra
@var int rb
@var int sub
@var int max_sub
@var int i
@printf string S_8
@scanf int n
fluctuations_L_0_while_begin :
#0 = n
#1 = #0
#1 = #1 LE 1
@bz #1 fluctuations_L_1_while_over
@printf string S_9
@printf string S_8
@scanf int n
@j fluctuations_L_0_while_begin
fluctuations_L_1_while_over :
a = 0
b = 0
max_sub = -1
i = 0
fluctuations_L_2_while_begin :
#0 = i
#1 = #0
#2 = #1
#3 = 0 SUB #2
#4 = #3
#5 = 0 SUB #4
#6 = #5
#7 = 0 SUB #6
#8 = #7
#9 = 0 SUB #8
#10 = n
#11 = #10
#9 = #9 LT #11
@bz #9 fluctuations_L_3_while_over
@scanf int a
#12 = a
#13 = #12
#14 = b
#13 = #13 SUB #14
#15 = #13
#16 = #15
sub = #16
@printf string S_10
#12 = sub
#13 = #12
@printf int #13
@printf string S_1
#12 = sub
#13 = #12
#13 = #13 LE 0
@bz #13 fluctuations_L_4_else_begin
#14 = sub
#15 = #14
#16 = #15
#17 = 0 SUB #16
sub = #17
@j fluctuations_L_5_else_over
fluctuations_L_4_else_begin :
fluctuations_L_5_else_over :
#12 = sub
#13 = #12
#14 = max_sub
#15 = #14
#13 = #13 GT #15
@bz #13 fluctuations_L_6_else_begin
#16 = a
#17 = #16
ra = #17
#16 = b
#17 = #16
rb = #17
#16 = sub
#17 = #16
max_sub = #17
@j fluctuations_L_7_else_over
fluctuations_L_6_else_begin :
fluctuations_L_7_else_over :
@printf string S_11
#12 = max_sub
#13 = #12
@printf int #13
@printf string S_1
#12 = a
#13 = #12
b = #13
#12 = i
#13 = #12
#13 = #13 ADD 1
i = #13
@j fluctuations_L_2_while_begin
fluctuations_L_3_while_over :
@printf string S_12
#0 = max_sub
#1 = #0
@printf int #1
@printf string S_13
#0 = ra
#1 = #0
@printf int #1
@printf string S_14
#0 = rb
#1 = #0
@printf int #1
@printf string S_1
@ret
@func fibonacci
@var int a
@var int b
@var int sum
@var int n
@var int i
a = 1
#0 = a
#1 = #0
b = #1
@printf string S_15
@scanf int n
#0 = n
#1 = #0
#1 = #1 LE 0
@bz #1 fibonacci_L_0_else_begin
@printf string S_16
@ret
@j fibonacci_L_1_else_over
fibonacci_L_0_else_begin :
fibonacci_L_1_else_over :
#0 = a
#1 = #0
@printf int #1
@printf string S_17
#0 = n
#1 = #0
#1 = #1 LE 1
@bz #1 fibonacci_L_2_else_begin
@ret
@j fibonacci_L_3_else_over
fibonacci_L_2_else_begin :
fibonacci_L_3_else_over :
#0 = b
#1 = #0
@printf int #1
@printf string S_17
#0 = n
#1 = #0
#1 = #1 LE 2
@bz #1 fibonacci_L_4_else_begin
@ret
@j fibonacci_L_5_else_over
fibonacci_L_4_else_begin :
fibonacci_L_5_else_over :
i = 3
fibonacci_L_6_while_begin :
#0 = i
#1 = #0
#2 = n
#3 = #2
#1 = #1 LE #3
@bz #1 fibonacci_L_7_while_over
#4 = a
#5 = #4
#6 = b
#5 = #5 ADD #6
sum = #5
#4 = a
#5 = #4
b = #5
#4 = sum
#5 = #4
a = #5
#4 = sum
#5 = #4
@printf int #5
@printf string S_17
#4 = n
#4 = #4 DIV 10
#4 = #4 MUL 10
#5 = #4
#6 = i
#7 = #6
#7 = #7 ADD 1
#5 = #5 EQ #7
@bz #5 fibonacci_L_8_else_begin
@printf string S_1
@j fibonacci_L_9_else_over
fibonacci_L_8_else_begin :
fibonacci_L_9_else_over :
#4 = i
#5 = #4
#5 = #5 ADD 1
i = #5
@j fibonacci_L_6_while_begin
fibonacci_L_7_while_over :
@ret
@ret
@func sort
@array int[] a 100
@var int size
@var int i
@var int j
@var int temp
@printf string S_18
@scanf int size
sort_L_0_while_begin :
#0 = size
#1 = #0
#1 = #1 GE 100
@bz #1 sort_L_1_while_over
@printf string S_19
@scanf int size
@j sort_L_0_while_begin
sort_L_1_while_over :
@printf string S_20
#0 = size
#1 = #0
@printf int #1
@printf string S_21
i = 0
sort_L_2_while_begin :
#0 = i
#1 = #0
#2 = size
#3 = #2
#1 = #1 LT #3
@bz #1 sort_L_3_while_over
@scanf int temp
#4 = i
#5 = #4
#6 = temp
#7 = #6
a = #5 ARSET #7
@printf string S_22
#4 = i
#5 = #4
#6 = a ARGET #5
#7 = #6
#8 = #7
@printf int #8
@printf string S_1
#4 = i
#5 = #4
#5 = #5 ADD 1
i = #5
@j sort_L_2_while_begin
sort_L_3_while_over :
i = 0
sort_L_4_while_begin :
#0 = i
#1 = #0
#2 = size
#3 = #2
#3 = #3 SUB 1
#1 = #1 LT #3
@bz #1 sort_L_5_while_over
j = 0
sort_L_6_while_begin :
#4 = j
#5 = #4
#6 = size
#7 = #6
#7 = #7 SUB 1
#8 = i
#7 = #7 SUB #8
#5 = #5 LT #7
@bz #5 sort_L_7_while_over
#9 = j
#10 = #9
#11 = a ARGET #10
#12 = #11
#13 = #12
#14 = j
#15 = #14
#15 = #15 ADD 1
#16 = a ARGET #15
#17 = #16
#18 = #17
#13 = #13 GT #18
@bz #13 sort_L_8_else_begin
@printf string S_23
#19 = j
#20 = #19
#21 = a ARGET #20
#22 = #21
#23 = #22
@printf int #23
@printf string S_24
#19 = j
#20 = #19
#20 = #20 ADD 1
#21 = a ARGET #20
#22 = #21
#23 = #22
@printf int #23
@printf string S_1
#19 = j
#20 = #19
#21 = a ARGET #20
#22 = #21
#23 = #22
temp = #23
#19 = j
#20 = #19
#21 = j
#22 = #21
#22 = #22 ADD 1
#23 = a ARGET #22
#24 = #23
#25 = #24
a = #20 ARSET #25
#19 = j
#20 = #19
#20 = #20 ADD 1
#21 = temp
#22 = #21
a = #20 ARSET #22
@j sort_L_9_else_over
sort_L_8_else_begin :
sort_L_9_else_over :
#9 = j
#10 = #9
#10 = #10 ADD 1
j = #10
@j sort_L_6_while_begin
sort_L_7_while_over :
#4 = i
#5 = #4
#5 = #5 ADD 1
i = #5
@j sort_L_4_while_begin
sort_L_5_while_over :
@printf string S_25
#0 = 2
#1 = a ARGET #0
#2 = #1
#3 = #2
@printf int #3
@printf string S_1
i = 0
@printf string S_26
sort_L_10_while_begin :
#0 = i
#1 = #0
#2 = size
#3 = #2
#1 = #1 LT #3
@bz #1 sort_L_11_while_over
#4 = i
#5 = #4
#5 = #5 ADD 1
i = #5
@printf string S_27
#4 = i
#5 = #4
#5 = #5 SUB 1
@printf int #5
@printf string S_28
#4 = i
#5 = #4
#5 = #5 SUB 1
#6 = a ARGET #5
#7 = #6
#8 = #7
@printf int #8
@printf string S_17
#4 = i
#5 = #4
#5 = #5 ADD 1
#6 = #5
#6 = #6 DIV 10
#6 = #6 MUL 10
#7 = #6
#8 = i
#9 = #8
#9 = #9 ADD 1
#7 = #7 EQ #9
@bz #7 sort_L_12_else_begin
@printf string S_1
@j sort_L_13_else_over
sort_L_12_else_begin :
sort_L_13_else_over :
@j sort_L_10_while_begin
sort_L_11_while_over :
@ret 48
@ret 0
@func select
@var int i
@var int num
select_L_0_while_begin :
@printf string S_1
@printf string S_29
@printf string S_30
@printf string S_31
@printf string S_32
@printf string S_33
@printf string S_34
@printf string S_35
@printf string S_29
@printf string S_36
@scanf int i
#0 = i
#0 = #0 DIV 1
#0 = #0 MUL 1
#1 = #0
@be #1 0 select_L_3_case
@be #1 1 select_L_4_case
@be #1 2 select_L_5_case
@be #1 3 select_L_6_case
@be #1 4 select_L_7_case
@be #1 5 select_L_8_case
@j select_L_9_default
select_L_3_case :
@j select_L_2_switch_over
select_L_4_case :
@call sort
@j select_L_2_switch_over
select_L_5_case :
@call fibonacci
@j select_L_2_switch_over
select_L_6_case :
@call fluctuations
@j select_L_2_switch_over
select_L_7_case :
@call zigzag
@j select_L_2_switch_over
select_L_8_case :
@printf string S_37
@scanf int num
@push 0
@push 99
#2 = num
#3 = #2
@push #3
@call find
@j select_L_2_switch_over
select_L_9_default :
@printf string S_9
@j select_L_2_switch_over
select_L_2_switch_over :
#0 = i
#1 = #0
#1 = #1 EQ 0
@bz #1 select_L_10_else_begin
@printf string S_38
@ret
@j select_L_11_else_over
select_L_10_else_begin :
select_L_11_else_over :
@j select_L_0_while_begin
select_L_1_while_over :
@ret
@func main
@call init_array
@call select
@ret
